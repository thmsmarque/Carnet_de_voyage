@startuml

skinparam class {
   BackgroundColor<<java>> Wheat
   BorderColor<<java>> Tomato
}


package projetIG
{

package vues{



interface Observateur {
          void reagir()
        }

class PanneauDeControle
{

public PanneauDeControle(Cahier c)

public void jourSuivant()
public void jourPrecedent()
public void choisirPage(string id)
public void changerStyle()
public void ajouterNode(string id)
public void supprimerNode(string id)
public void ajouterPage()
public void ajouterParticipant()
}

package controlleurs{
class ControlleurPageDeGarde implements Observateur
{
    public ControlleurPageDeGarde(Cahier c, PanneauDeControle p)
    public void initData(Cahier c, PanneauDeControle p) {
    void initialize() {
    void afficherPageDuJour(ActionEvent event)
    void afficherPremierePage(ActionEvent event)
    void ajouterParticipant(ActionEvent event)
    void chargerCarnet(ActionEvent event)
    void fermerCarnet(ActionEvent event)
    void sauvegargerCarnet(ActionEvent event)
    void supprimerParticipants(ActionEvent event)
    public void reagir()
    void changerAuteur(ActionEvent event)
    void changerNomVoyage(ActionEvent event)
}
class ControlleurPageJour implements Observateur
{
    public ControlleurPageJour(Cahier c, PanneauDeControle panneauDeControle, Stage stage) {
    void initialize()
    void ajouterPhoto(ActionEvent event)
    void ajouterTexte(ActionEvent event)
    void changerStylePage(ActionEvent event)
    void changerTitre()
    void pagePrecedente(ActionEvent event)
    void pageSuivante(ActionEvent event)
    void selectionnerNode(MouseEvent event)
    void fermerCarnet(ActionEvent event)
    void ajouterNouvellePage(ActionEvent event)
    void supprimerPage(ActionEvent event)
    public void reagir()
}
class ControlleurSmallNodeImage implements Observateur
{
    public ControlleurSmallNodeImage(NodeImageIG node, Stage stage)
    void initialize()
    void modifierImage()

}
class ControlleurSmallNodeText implements Observateur
{
    public ControlleurSmallNodeText(NodeTexteIG node)
    void initialize()
    void changerTexte()

}

}

}

package outils{


class FabriqueIdentifiant {
int noPage
int noNode
static FabriqueIdentifiant getInstance()
String getIdentifiantPage()
String getIdentifiantNode()
void resetNode()
void resetPage()
}

class ImageFileUtils{
    public static void saveImageToFile(Image image, String filePath)
    public static Image loadImageFromFile(String filePath)
}



}

package cahierIG
{

class DateCahier<<java>>


class SujetObserve {
 void ajouterObservateur(Observateur v)
void notifierObservateurs()
}


class Cahier extends SujetObserve{
string auteur
string intervalleTemps
ArrayList<string> participants
ArrayList<PageJourIG> pages
PageIG pageCourante

public Cahier()
public PageDeGardeIG genererPDG()
public void ajouterPage()
public ArrayList<PageJourIG> getPages()
public void pageSuivane()
public void jourPrecedent()
public void choisirPage(string id)
public void ajouterParticipant(string nom)
}

Abstract PageIG{
string identifiantPage
string titre

public NodeIG getNodeID(string id)
public void setNodeIG(NodeIG node)
public void supprimerNodeIG(string id)
}


Abstract NodeIG
{
string identifiantNode
abstract boolean estTexte()
abstract boolean estImage()
abstract boolean estCoordGPS()
}

class NodeTexteIG extends NodeIG
{
string texte
public string getTexte(string Texte)

}

class NodeImageIG extends NodeIG
{
string image
public string getImage()
public void setImage(string Image)
}


}

SujetObserve "1"-right "*" Observateur
Cahier --"*" PageIG
NodeIG "*"-- PageIG
PageIG --"1" DateCahier
PanneauDeControle --"1" Cahier




}
@enduml
